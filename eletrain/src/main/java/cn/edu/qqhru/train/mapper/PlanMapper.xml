<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.qqhru.train.mapper.PlanMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.qqhru.train.pojo.Plan" >
    <id column="plan_id" property="planId" jdbcType="INTEGER" />
    <result column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="sign" property="sign" jdbcType="INTEGER" />
    <result column="exam_name" property="examName" jdbcType="VARCHAR" />
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="plan_aim" property="planAim" jdbcType="VARCHAR" />
    <result column="ability" property="ability" jdbcType="VARCHAR" />
    <result column="scale" property="scale" jdbcType="VARCHAR" />
    <result column="plan_pattern" property="planPattern" jdbcType="VARCHAR" />
    <result column="exam_pattern" property="examPattern" jdbcType="VARCHAR" />
    <result column="plan_content" property="planContent" jdbcType="VARCHAR" />
    <result column="plan_requirement" property="planRequirement" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    plan_id, admin_id, createtime, sign, exam_name, pname, updatetime, plan_aim, ability, 
    scale, plan_pattern, exam_pattern, plan_content, plan_requirement
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.qqhru.train.pojo.PlanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from plan
    where plan_id = #{planId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from plan
    where plan_id = #{planId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.qqhru.train.pojo.PlanExample" >
    delete from plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="planId" useGeneratedKeys="true" parameterType="cn.edu.qqhru.train.pojo.Plan" >
    insert into plan (plan_id, admin_id, createtime, 
      sign, exam_name, pname, 
      updatetime, plan_aim, ability, 
      scale, plan_pattern, exam_pattern, 
      plan_content, plan_requirement)
    values (#{planId,jdbcType=INTEGER}, #{adminId,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{sign,jdbcType=INTEGER}, #{examName,jdbcType=VARCHAR}, #{pname,jdbcType=VARCHAR}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{planAim,jdbcType=VARCHAR}, #{ability,jdbcType=VARCHAR}, 
      #{scale,jdbcType=VARCHAR}, #{planPattern,jdbcType=VARCHAR}, #{examPattern,jdbcType=VARCHAR}, 
      #{planContent,jdbcType=VARCHAR}, #{planRequirement,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.qqhru.train.pojo.Plan" >
    insert into plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="planId != null" >
        plan_id,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="examName != null" >
        exam_name,
      </if>
      <if test="pname != null" >
        pname,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="planAim != null" >
        plan_aim,
      </if>
      <if test="ability != null" >
        ability,
      </if>
      <if test="scale != null" >
        scale,
      </if>
      <if test="planPattern != null" >
        plan_pattern,
      </if>
      <if test="examPattern != null" >
        exam_pattern,
      </if>
      <if test="planContent != null" >
        plan_content,
      </if>
      <if test="planRequirement != null" >
        plan_requirement,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="planId != null" >
        #{planId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=INTEGER},
      </if>
      <if test="examName != null" >
        #{examName,jdbcType=VARCHAR},
      </if>
      <if test="pname != null" >
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="planAim != null" >
        #{planAim,jdbcType=VARCHAR},
      </if>
      <if test="ability != null" >
        #{ability,jdbcType=VARCHAR},
      </if>
      <if test="scale != null" >
        #{scale,jdbcType=VARCHAR},
      </if>
      <if test="planPattern != null" >
        #{planPattern,jdbcType=VARCHAR},
      </if>
      <if test="examPattern != null" >
        #{examPattern,jdbcType=VARCHAR},
      </if>
      <if test="planContent != null" >
        #{planContent,jdbcType=VARCHAR},
      </if>
      <if test="planRequirement != null" >
        #{planRequirement,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.qqhru.train.pojo.PlanExample" resultType="java.lang.Integer" >
    select count(*) from plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update plan
    <set >
      <if test="record.planId != null" >
        plan_id = #{record.planId,jdbcType=INTEGER},
      </if>
      <if test="record.adminId != null" >
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sign != null" >
        sign = #{record.sign,jdbcType=INTEGER},
      </if>
      <if test="record.examName != null" >
        exam_name = #{record.examName,jdbcType=VARCHAR},
      </if>
      <if test="record.pname != null" >
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.planAim != null" >
        plan_aim = #{record.planAim,jdbcType=VARCHAR},
      </if>
      <if test="record.ability != null" >
        ability = #{record.ability,jdbcType=VARCHAR},
      </if>
      <if test="record.scale != null" >
        scale = #{record.scale,jdbcType=VARCHAR},
      </if>
      <if test="record.planPattern != null" >
        plan_pattern = #{record.planPattern,jdbcType=VARCHAR},
      </if>
      <if test="record.examPattern != null" >
        exam_pattern = #{record.examPattern,jdbcType=VARCHAR},
      </if>
      <if test="record.planContent != null" >
        plan_content = #{record.planContent,jdbcType=VARCHAR},
      </if>
      <if test="record.planRequirement != null" >
        plan_requirement = #{record.planRequirement,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update plan
    set plan_id = #{record.planId,jdbcType=INTEGER},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      sign = #{record.sign,jdbcType=INTEGER},
      exam_name = #{record.examName,jdbcType=VARCHAR},
      pname = #{record.pname,jdbcType=VARCHAR},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      plan_aim = #{record.planAim,jdbcType=VARCHAR},
      ability = #{record.ability,jdbcType=VARCHAR},
      scale = #{record.scale,jdbcType=VARCHAR},
      plan_pattern = #{record.planPattern,jdbcType=VARCHAR},
      exam_pattern = #{record.examPattern,jdbcType=VARCHAR},
      plan_content = #{record.planContent,jdbcType=VARCHAR},
      plan_requirement = #{record.planRequirement,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.qqhru.train.pojo.Plan" >
    update plan
    <set >
      <if test="adminId != null" >
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=INTEGER},
      </if>
      <if test="examName != null" >
        exam_name = #{examName,jdbcType=VARCHAR},
      </if>
      <if test="pname != null" >
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="planAim != null" >
        plan_aim = #{planAim,jdbcType=VARCHAR},
      </if>
      <if test="ability != null" >
        ability = #{ability,jdbcType=VARCHAR},
      </if>
      <if test="scale != null" >
        scale = #{scale,jdbcType=VARCHAR},
      </if>
      <if test="planPattern != null" >
        plan_pattern = #{planPattern,jdbcType=VARCHAR},
      </if>
      <if test="examPattern != null" >
        exam_pattern = #{examPattern,jdbcType=VARCHAR},
      </if>
      <if test="planContent != null" >
        plan_content = #{planContent,jdbcType=VARCHAR},
      </if>
      <if test="planRequirement != null" >
        plan_requirement = #{planRequirement,jdbcType=VARCHAR},
      </if>
    </set>
    where plan_id = #{planId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.qqhru.train.pojo.Plan" >
    update plan
    set admin_id = #{adminId,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      sign = #{sign,jdbcType=INTEGER},
      exam_name = #{examName,jdbcType=VARCHAR},
      pname = #{pname,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      plan_aim = #{planAim,jdbcType=VARCHAR},
      ability = #{ability,jdbcType=VARCHAR},
      scale = #{scale,jdbcType=VARCHAR},
      plan_pattern = #{planPattern,jdbcType=VARCHAR},
      exam_pattern = #{examPattern,jdbcType=VARCHAR},
      plan_content = #{planContent,jdbcType=VARCHAR},
      plan_requirement = #{planRequirement,jdbcType=VARCHAR}
    where plan_id = #{planId,jdbcType=INTEGER}
  </update>
</mapper>