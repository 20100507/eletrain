<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.qqhru.train.mapper.ScoreMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.qqhru.train.pojo.Score" >
    <id column="score_id" property="scoreId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="theoryscore" property="theoryscore" jdbcType="REAL" />
    <result column="practicescore" property="practicescore" jdbcType="REAL" />
    <result column="total" property="total" jdbcType="REAL" />
    <result column="common" property="common" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="classes_id" property="classesId" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="certificateNo" property="certificateno" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    score_id, student_id, theoryscore, practicescore, total, common, course_id, classes_id, 
    teacher_id, certificateNo
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.qqhru.train.pojo.ScoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from score
    where score_id = #{scoreId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from score
    where score_id = #{scoreId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.qqhru.train.pojo.ScoreExample" >
    delete from score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.qqhru.train.pojo.Score" >
    insert into score (score_id, student_id, theoryscore, 
      practicescore, total, common, 
      course_id, classes_id, teacher_id, 
      certificateNo)
    values (#{scoreId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{theoryscore,jdbcType=REAL}, 
      #{practicescore,jdbcType=REAL}, #{total,jdbcType=REAL}, #{common,jdbcType=VARCHAR}, 
      #{courseId,jdbcType=INTEGER}, #{classesId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, 
      #{certificateno,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.qqhru.train.pojo.Score" >
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="scoreId != null" >
        score_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="theoryscore != null" >
        theoryscore,
      </if>
      <if test="practicescore != null" >
        practicescore,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="common != null" >
        common,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="classesId != null" >
        classes_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="certificateno != null" >
        certificateNo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="scoreId != null" >
        #{scoreId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="theoryscore != null" >
        #{theoryscore,jdbcType=REAL},
      </if>
      <if test="practicescore != null" >
        #{practicescore,jdbcType=REAL},
      </if>
      <if test="total != null" >
        #{total,jdbcType=REAL},
      </if>
      <if test="common != null" >
        #{common,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null" >
        #{classesId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="certificateno != null" >
        #{certificateno,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.qqhru.train.pojo.ScoreExample" resultType="java.lang.Integer" >
    select count(*) from score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update score
    <set >
      <if test="record.scoreId != null" >
        score_id = #{record.scoreId,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.theoryscore != null" >
        theoryscore = #{record.theoryscore,jdbcType=REAL},
      </if>
      <if test="record.practicescore != null" >
        practicescore = #{record.practicescore,jdbcType=REAL},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=REAL},
      </if>
      <if test="record.common != null" >
        common = #{record.common,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.classesId != null" >
        classes_id = #{record.classesId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.certificateno != null" >
        certificateNo = #{record.certificateno,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update score
    set score_id = #{record.scoreId,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      theoryscore = #{record.theoryscore,jdbcType=REAL},
      practicescore = #{record.practicescore,jdbcType=REAL},
      total = #{record.total,jdbcType=REAL},
      common = #{record.common,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=INTEGER},
      classes_id = #{record.classesId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      certificateNo = #{record.certificateno,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.qqhru.train.pojo.Score" >
    update score
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="theoryscore != null" >
        theoryscore = #{theoryscore,jdbcType=REAL},
      </if>
      <if test="practicescore != null" >
        practicescore = #{practicescore,jdbcType=REAL},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=REAL},
      </if>
      <if test="common != null" >
        common = #{common,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null" >
        classes_id = #{classesId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="certificateno != null" >
        certificateNo = #{certificateno,jdbcType=VARCHAR},
      </if>
    </set>
    where score_id = #{scoreId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.qqhru.train.pojo.Score" >
    update score
    set student_id = #{studentId,jdbcType=INTEGER},
      theoryscore = #{theoryscore,jdbcType=REAL},
      practicescore = #{practicescore,jdbcType=REAL},
      total = #{total,jdbcType=REAL},
      common = #{common,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=INTEGER},
      classes_id = #{classesId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      certificateNo = #{certificateno,jdbcType=VARCHAR}
    where score_id = #{scoreId,jdbcType=INTEGER}
  </update>
</mapper>